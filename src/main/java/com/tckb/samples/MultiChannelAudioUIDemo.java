/*
 * Copyright (C) 2013 tckb < Chandra [dot] Tungathurthi [at] rwth-aachen.de >
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.tckb.samples;

import com.tckb.audio.ui.AudioUI;
import com.tckb.audio.ui.MultiChannelAudioUI;
import com.tckb.audio.ui.display.AudioDisplay;
import com.tckb.util.Utility;

/**
 *
 * @author tckb < Chandra [dot] Tungathurthi [at] rwth-aachen.de >
 */
public class MultiChannelAudioUIDemo extends javax.swing.JFrame {

    AudioUI ch1ui, ch2ui;
    MultiChannelAudioUI mui = new MultiChannelAudioUI();

    /**
     * Creates new form MultiChannelAudioUIDemo
     */
    public MultiChannelAudioUIDemo() {

        
        // gui init
        initComponents();
        
        // intial setup for audioui-1
        ch1ui = new AudioUI();
        ch1ui.attachUIComponent(AudioUI.UIComponent.CONTAINER, ch1Panel);
        ch1ui.setChannelToRead(1); // read channel 1
        
        // intial setup for audioui-2
        ch2ui = new AudioUI();
        ch2ui.attachUIComponent(AudioUI.UIComponent.CONTAINER, ch2Panel);
        ch2ui.setChannelToRead(2); // read channel 2

        // configure multichannel ui
        mui.attachUIComponent(MultiChannelAudioUI.UIComponent.PLAY, playButton);
        mui.attachUIComponent(MultiChannelAudioUI.UIComponent.PAUSE, pauseButton);
        mui.attachUIComponent(MultiChannelAudioUI.UIComponent.SEEKER, jProgressBar1);
        
        // add audio uis
        mui.addTrack(ch1ui, AudioDisplay.TYPE.WAVEFORM);
        mui.addTrack(ch2ui, AudioDisplay.TYPE.WAVEFORM);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        playButton = new javax.swing.JButton();
        pauseButton = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        audiFileButton = new javax.swing.JButton();
        ch1ZIn = new javax.swing.JButton();
        ch1Zout = new javax.swing.JButton();
        ch2ZIn = new javax.swing.JButton();
        ch2Zout = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        zstep = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jSplitPane1 = new javax.swing.JSplitPane();
        ch1Panel = new javax.swing.JScrollPane();
        ch2Panel = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        playButton.setText("play");

        pauseButton.setText("pause");

        audiFileButton.setText("open file");
        audiFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                audiFileButtonActionPerformed(evt);
            }
        });

        ch1ZIn.setText("+");
        ch1ZIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ch1ZInActionPerformed(evt);
            }
        });

        ch1Zout.setText("-");
        ch1Zout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ch1ZoutActionPerformed(evt);
            }
        });

        ch2ZIn.setText("+");
        ch2ZIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ch2ZInActionPerformed(evt);
            }
        });

        ch2Zout.setText("-");
        ch2Zout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ch2ZoutActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Mute");
        jCheckBox1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox1StateChanged(evt);
            }
        });
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Mute");
        jCheckBox2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox2StateChanged(evt);
            }
        });

        jLabel1.setText("secs");

        jSplitPane1.setDividerLocation(600);
        jSplitPane1.setLeftComponent(ch1Panel);
        jSplitPane1.setRightComponent(ch2Panel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(playButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pauseButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(audiFileButton)
                                .addGap(327, 362, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ch1ZIn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ch1Zout, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(zstep, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addGap(49, 49, 49)))
                        .addComponent(ch2ZIn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ch2Zout, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox2)
                        .addGap(0, 366, Short.MAX_VALUE))
                    .addComponent(jSplitPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ch1ZIn)
                    .addComponent(ch1Zout)
                    .addComponent(ch2ZIn)
                    .addComponent(ch2Zout)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2)
                    .addComponent(zstep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(17, 17, 17)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playButton)
                    .addComponent(pauseButton)
                    .addComponent(audiFileButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void audiFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_audiFileButtonActionPerformed

        mui.setAudioFile(Utility.UI.getFile(rootPane));
        
        jCheckBox1.setSelected(ch1ui.isMuted());
        jCheckBox2.setSelected(ch2ui.isMuted());

    }//GEN-LAST:event_audiFileButtonActionPerformed

    private void ch1ZInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ch1ZInActionPerformed
        ch1ui.getDisplay().setZoomStep(Integer.parseInt(zstep.getText()));
        ch1ui.getDisplay().zoomIn();
    }//GEN-LAST:event_ch1ZInActionPerformed

    private void ch1ZoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ch1ZoutActionPerformed
        ch1ui.getDisplay().setZoomStep(Integer.parseInt(zstep.getText()));

        ch1ui.getDisplay().zoomOut();
    }//GEN-LAST:event_ch1ZoutActionPerformed

    private void ch2ZInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ch2ZInActionPerformed
        ch2ui.getDisplay().setZoomStep(Integer.parseInt(zstep.getText()));
        ch2ui.getDisplay().zoomIn();
    }//GEN-LAST:event_ch2ZInActionPerformed

    private void ch2ZoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ch2ZoutActionPerformed
        ch2ui.getDisplay().setZoomStep(Integer.parseInt(zstep.getText()));
        ch2ui.getDisplay().zoomOut();
    }//GEN-LAST:event_ch2ZoutActionPerformed

    private void jCheckBox1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox1StateChanged

        ch1ui.setAudioMute(jCheckBox1.isSelected());

    }//GEN-LAST:event_jCheckBox1StateChanged

    private void jCheckBox2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox2StateChanged

        ch2ui.setAudioMute(jCheckBox2.isSelected());

    }//GEN-LAST:event_jCheckBox2StateChanged

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MultiChannelAudioUIDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MultiChannelAudioUIDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MultiChannelAudioUIDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MultiChannelAudioUIDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MultiChannelAudioUIDemo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton audiFileButton;
    private javax.swing.JScrollPane ch1Panel;
    private javax.swing.JButton ch1ZIn;
    private javax.swing.JButton ch1Zout;
    private javax.swing.JScrollPane ch2Panel;
    private javax.swing.JButton ch2ZIn;
    private javax.swing.JButton ch2Zout;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JButton pauseButton;
    private javax.swing.JButton playButton;
    private javax.swing.JTextField zstep;
    // End of variables declaration//GEN-END:variables
}
